[{"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\index.js":"1","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\reportWebVitals.js":"2","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\Modal\\index.js":"3","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\App.js":"4","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\dash\\index.js":"5","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\home\\index.js":"6","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\editor\\index.js":"7","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\navbar\\index.js":"8","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\code_editor\\index.js":"9","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\index.js":"10","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\task_node.js":"11","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\app.js":"12","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\button\\index.js":"13","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\index.js":"14","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\contents.js":"15","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\list_item\\index.js":"16"},{"size":212,"mtime":1617758828617,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1706,"mtime":1610542409566,"results":"20","hashOfConfig":"18"},{"size":924,"mtime":1615559854944,"results":"21","hashOfConfig":"18"},{"size":122,"mtime":1615551504556,"results":"22","hashOfConfig":"18"},{"size":2594,"mtime":1617925610693,"results":"23","hashOfConfig":"18"},{"size":852,"mtime":1615561551398,"results":"24","hashOfConfig":"18"},{"size":779,"mtime":1617926746943,"results":"25","hashOfConfig":"18"},{"size":684,"mtime":1615551504552,"results":"26","hashOfConfig":"18"},{"size":3593,"mtime":1615551504553,"results":"27","hashOfConfig":"18"},{"size":1098,"mtime":1615561574518,"results":"28","hashOfConfig":"18"},{"size":705,"mtime":1617744583615,"results":"29","hashOfConfig":"18"},{"size":624,"mtime":1615562384778,"results":"30","hashOfConfig":"18"},{"size":1981,"mtime":1617929833301,"results":"31","hashOfConfig":"18"},{"size":147,"mtime":1617928574572,"results":"32","hashOfConfig":"18"},{"size":234,"mtime":1617927766831,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"eemzca",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\index.js",[],["73","74"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\reportWebVitals.js",[],["75","76"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\Modal\\index.js",[],["77","78"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\App.js",["79"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\dash\\index.js",[],["80","81"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\home\\index.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\editor\\index.js",["82","83","84","85","86"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\navbar\\index.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\code_editor\\index.js",["87","88"],"import React, { Component } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport { ConnectionMode } from \"react-flow-renderer\";\r\n\r\n// Render editor\r\nexport const CodeEditor = ({selectedNode}) => {\r\n  const onChange = (newValue) => {\r\n    console.log(\"change\", newValue);\r\n    selectedNode.data.code = newValue;\r\n  }\r\n\r\n    return( \r\n    <AceEditor\r\n        mode=\"javascript\"\r\n        theme=\"github\"\r\n        onChange={onChange}\r\n        name=\"UNIQUE_ID_OF_DIV\"\r\n        editorProps={{ $blockScrolling: true }}\r\n        value={selectedNode.data.code || \"default\"}\r\n    />\r\n    )\r\n}","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\index.js",["89"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls\r\n} from 'react-flow-renderer';\r\nimport Sidebar from '../sidebar';\r\nimport './dnd.css';\r\nimport taskNode from './task_node';\r\nconst initialElements = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'input node' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'taskNode',\r\n    data: { label: 'task node', code: \"this is a test\" },\r\n    position: { x: 350, y: 5 },\r\n  },\r\n];\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst nodeTypes = {\r\n  taskNode\r\n};\r\n\r\n\r\nconst GraphEditor = ({selectedNode, setSelectedNode}) => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n\r\n  //const [selectedNode, setSelectedNode] = useState({id: -1, data: {label: 'test'}});\r\n\r\n  const [selectedNodeName, setSelectedNodeName] = useState();\r\n\r\n\r\n  const onElementClick= (evt, node) => setSelectedNode(node);\r\n\r\n  useEffect(() => setSelectedNodeName(selectedNode.data.label), [selectedNode]);\r\n\r\n  useEffect(() => {\r\n    setElements((els) =>\r\n      els.map((el) => {\r\n        if (el.id === selectedNode.id) {\r\n          // it's important that you create a new object here\r\n          // in order to notify react flow about the change\r\n          el.data = {\r\n            ...el.data,\r\n            label: selectedNodeName,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  }, [selectedNodeName]);\r\n\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onNodeDragStart = (evt, node) => setSelectedNode(node);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n    \r\n  };\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: `${type} node` },\r\n    };\r\n    setElements((es) => es.concat(newNode));\r\n    setSelectedNode(newNode);\r\n  };\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <Sidebar />\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            elements={elements}\r\n            nodeTypes={nodeTypes}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onElementClick = {onElementClick}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            onNodeDragStart = {onNodeDragStart}\r\n          >\r\n            <div className=\"updatenode__controls\">\r\n            <label>label:</label>\r\n            <input\r\n              value={selectedNodeName}\r\n              onChange={(evt) => setSelectedNodeName(evt.target.value)}\r\n            />\r\n            \r\n          </div>\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\nexport default GraphEditor;","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\task_node.js",["90"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\app.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\button\\index.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\index.js",["91","92","93"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\contents.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\list_item\\index.js",["94"],"import React, { useState } from 'react';\r\nimport './index.css';\r\n\r\nexport const ListItem = props => {\r\n    //const [collapsed] = useState(true);\r\n\r\n    \r\n\r\n    return (\r\n        <li onClick={props.onClick}>{props.text} </li>\r\n    )\r\n}",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":12,"column":3,"nodeType":"105","endLine":12,"endColumn":7},{"ruleId":"95","replacedBy":"106"},{"ruleId":"97","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"113","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"114","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},{"ruleId":"108","severity":1,"message":"115","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":20},{"ruleId":"108","severity":1,"message":"116","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"117","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":61,"column":6,"nodeType":"120","endLine":61,"endColumn":24,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"122","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"123","line":2,"column":31,"nodeType":"110","messageId":"111","endLine":2,"endColumn":37},{"ruleId":"108","severity":1,"message":"124","line":2,"column":39,"nodeType":"110","messageId":"111","endLine":2,"endColumn":48},{"ruleId":"118","severity":1,"message":"125","line":14,"column":16,"nodeType":"126","endLine":20,"endColumn":6},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],["127"],["128"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression",["127"],["128"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'GraphEditor' is defined but never used.","'CodeEditor' is defined but never used.","'Component' is defined but never used.","'ConnectionMode' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedNode.id'. Either include it or remove the dependency array. If 'setElements' needs the current value of 'selectedNode.id', you can also switch to useReducer instead of useState and read 'selectedNode.id' in the reducer.","ArrayExpression",["129"],"'Handle' is defined but never used.","'Button' is defined but never used.","'ListGroup' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [selectedNode.id, selectedNodeName]",{"range":"132","text":"133"},[1585,1603],"[selectedNode.id, selectedNodeName]"]