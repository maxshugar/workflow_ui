[{"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\index.js":"1","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\reportWebVitals.js":"2","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\Modal\\index.js":"3","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\App.js":"4","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\dash\\index.js":"5","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\home\\index.js":"6","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\editor\\index.js":"7","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\navbar\\index.js":"8","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\code_editor\\index.js":"9","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\index.js":"10","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\task_node.js":"11","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\app.js":"12","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\button\\index.js":"13","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\index.js":"14","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\contents.js":"15","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\list_item\\index.js":"16","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\login\\index.js":"17","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\projects\\index.js":"18","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\private_route.js":"19","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\context\\auth.js":"20","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\store.js":"21","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\features\\user_slice.js":"22"},{"size":346,"mtime":1618157201229,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1706,"mtime":1610542409566,"results":"26","hashOfConfig":"24"},{"size":924,"mtime":1615559854944,"results":"27","hashOfConfig":"24"},{"size":122,"mtime":1615551504556,"results":"28","hashOfConfig":"24"},{"size":2594,"mtime":1617925610693,"results":"29","hashOfConfig":"24"},{"size":852,"mtime":1615561551398,"results":"30","hashOfConfig":"24"},{"size":1661,"mtime":1618160044297,"results":"31","hashOfConfig":"24"},{"size":684,"mtime":1615551504552,"results":"32","hashOfConfig":"24"},{"size":3593,"mtime":1615551504553,"results":"33","hashOfConfig":"24"},{"size":1098,"mtime":1615561574518,"results":"34","hashOfConfig":"24"},{"size":1335,"mtime":1618159770359,"results":"35","hashOfConfig":"24"},{"size":624,"mtime":1615562384778,"results":"36","hashOfConfig":"24"},{"size":1981,"mtime":1617929833301,"results":"37","hashOfConfig":"24"},{"size":391,"mtime":1617984153060,"results":"38","hashOfConfig":"24"},{"size":234,"mtime":1617927766831,"results":"39","hashOfConfig":"24"},{"size":1075,"mtime":1618158006527,"results":"40","hashOfConfig":"24"},{"size":182,"mtime":1618152670600,"results":"41","hashOfConfig":"24"},{"size":520,"mtime":1618153903295,"results":"42","hashOfConfig":"24"},{"size":166,"mtime":1618149598912,"results":"43","hashOfConfig":"24"},{"size":187,"mtime":1618157064443,"results":"44","hashOfConfig":"24"},{"size":495,"mtime":1618157100380,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eemzca",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\index.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\reportWebVitals.js",[],["98","99"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\Modal\\index.js",[],["100","101"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\App.js",["102"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\dash\\index.js",[],["103","104"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\home\\index.js",[],["105","106"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\editor\\index.js",["107","108","109","110","111"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\navbar\\index.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\code_editor\\index.js",["112","113"],"import React, { Component } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport { ConnectionMode } from \"react-flow-renderer\";\r\n\r\n// Render editor\r\nexport const CodeEditor = ({selectedNode}) => {\r\n  const onChange = (newValue) => {\r\n    console.log(\"change\", newValue);\r\n    selectedNode.data.code = newValue;\r\n  }\r\n\r\n    return( \r\n    <AceEditor\r\n        mode=\"javascript\"\r\n        theme=\"github\"\r\n        onChange={onChange}\r\n        name=\"UNIQUE_ID_OF_DIV\"\r\n        editorProps={{ $blockScrolling: true }}\r\n        value={selectedNode.data.code || \"default\"}\r\n    />\r\n    )\r\n}","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\index.js",["114"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls\r\n} from 'react-flow-renderer';\r\nimport Sidebar from '../sidebar';\r\nimport './dnd.css';\r\nimport taskNode from './task_node';\r\nconst initialElements = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'input node' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'taskNode',\r\n    data: { label: 'task node', code: \"this is a test\" },\r\n    position: { x: 350, y: 5 },\r\n  },\r\n];\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst nodeTypes = {\r\n  taskNode\r\n};\r\n\r\n\r\nconst GraphEditor = ({selectedNode, setSelectedNode}) => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n\r\n  //const [selectedNode, setSelectedNode] = useState({id: -1, data: {label: 'test'}});\r\n\r\n  const [selectedNodeName, setSelectedNodeName] = useState();\r\n\r\n\r\n  const onElementClick= (evt, node) => setSelectedNode(node);\r\n\r\n  useEffect(() => setSelectedNodeName(selectedNode.data.label), [selectedNode]);\r\n\r\n  useEffect(() => {\r\n    setElements((els) =>\r\n      els.map((el) => {\r\n        if (el.id === selectedNode.id) {\r\n          // it's important that you create a new object here\r\n          // in order to notify react flow about the change\r\n          el.data = {\r\n            ...el.data,\r\n            label: selectedNodeName,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  }, [selectedNodeName]);\r\n\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onNodeDragStart = (evt, node) => setSelectedNode(node);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n    \r\n  };\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: `${type} node` },\r\n    };\r\n    setElements((es) => es.concat(newNode));\r\n    setSelectedNode(newNode);\r\n  };\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <Sidebar />\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            elements={elements}\r\n            nodeTypes={nodeTypes}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onElementClick = {onElementClick}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            onNodeDragStart = {onNodeDragStart}\r\n          >\r\n            <div className=\"updatenode__controls\">\r\n            <label>label:</label>\r\n            <input\r\n              value={selectedNodeName}\r\n              onChange={(evt) => setSelectedNodeName(evt.target.value)}\r\n            />\r\n            \r\n          </div>\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\nexport default GraphEditor;","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\graph_editor\\task_node.js",["115"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\app.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\button\\index.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\index.js",["116","117","118"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Button, ListGroup } from 'react-bootstrap';\r\nimport contents from './contents';\r\nimport './index.css';\r\nimport { ListItem } from '../../components/list_item';\r\n// import file from \"./pages/introduction.md\";\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nexport const Docs = () => {\r\n\r\n    const [selectedItemIndex, setSelectedItemIndex] = useState(0);\r\n    const [selectedMarkdown, setSelectedMarkdown] = useState(undefined);\r\n\r\n    useEffect( async () => {\r\n        if(!contents[selectedItemIndex].hasOwnProperty('markdown')){\r\n            const markdown = await getMarkdown(selectedItemIndex);\r\n            contents[selectedItemIndex]['markdown'] = markdown;\r\n        }\r\n        setSelectedMarkdown(contents[selectedItemIndex]['markdown']);\r\n    }, [selectedItemIndex]);\r\n\r\n    const getMarkdown = async (index) => {\r\n        const file = require(`./markdown/${contents[index].path}`);\r\n        const res = await fetch(file.default);\r\n        return res.text();\r\n    }\r\n\r\n    const makeListItems = () => {\r\n        return(\r\n            <ul> \r\n                {\r\n                    contents.map((content, index) => {\r\n                        return <ListItem key={index} onClick={() => setSelectedItemIndex(index)} text={content.name} />\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col className='sidebar' md={2}>\r\n                        <div className='sidebar-sticky'>\r\n                            { makeListItems() }\r\n                        </div>\r\n                        \r\n                    </Col>\r\n                    <Col md={8}>\r\n                        {selectedItemIndex == null ? '' : <ReactMarkdown source={selectedMarkdown} /> }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\docs\\contents.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\components\\list_item\\index.js",["119"],"import React, { useState } from 'react';\r\nimport './index.css';\r\n\r\nexport const ListItem = props => {\r\n    //const [collapsed] = useState(true);\r\n\r\n    \r\n\r\n    return (\r\n        <li onClick={props.onClick}>{props.text} </li>\r\n    )\r\n}","C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\login\\index.js",["120","121","122"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\containers\\projects\\index.js",["123","124","125","126"],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\private_route.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\context\\auth.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\store.js",[],"C:\\Users\\gbshugam\\projects\\workflow_ui\\src\\features\\user_slice.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":12,"column":3,"nodeType":"135","endLine":12,"endColumn":7},{"ruleId":"127","replacedBy":"136"},{"ruleId":"129","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"129","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"145","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"146","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":19},{"ruleId":"140","severity":1,"message":"147","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":20},{"ruleId":"140","severity":1,"message":"148","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"149","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":61,"column":6,"nodeType":"152","endLine":61,"endColumn":24,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"154","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"155","line":2,"column":31,"nodeType":"142","messageId":"143","endLine":2,"endColumn":37},{"ruleId":"140","severity":1,"message":"156","line":2,"column":39,"nodeType":"142","messageId":"143","endLine":2,"endColumn":48},{"ruleId":"150","severity":1,"message":"157","line":14,"column":16,"nodeType":"158","endLine":20,"endColumn":6},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"159","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":14},{"ruleId":"140","severity":1,"message":"160","line":3,"column":16,"nodeType":"142","messageId":"143","endLine":3,"endColumn":24},{"ruleId":"140","severity":1,"message":"161","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"162","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":19},{"ruleId":"140","severity":1,"message":"163","line":2,"column":21,"nodeType":"142","messageId":"143","endLine":2,"endColumn":24},{"ruleId":"140","severity":1,"message":"164","line":2,"column":26,"nodeType":"142","messageId":"143","endLine":2,"endColumn":29},{"ruleId":"140","severity":1,"message":"155","line":2,"column":31,"nodeType":"142","messageId":"143","endLine":2,"endColumn":37},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression",["165"],["166"],["165"],["166"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'GraphEditor' is defined but never used.","'CodeEditor' is defined but never used.","'Component' is defined but never used.","'ConnectionMode' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedNode.id'. Either include it or remove the dependency array. If 'setElements' needs the current value of 'selectedNode.id', you can also switch to useReducer instead of useState and read 'selectedNode.id' in the reducer.","ArrayExpression",["167"],"'Handle' is defined but never used.","'Button' is defined but never used.","'ListGroup' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Link' is defined but never used.","'Redirect' is defined but never used.","'useAuth' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [selectedNode.id, selectedNodeName]",{"range":"170","text":"171"},[1585,1603],"[selectedNode.id, selectedNodeName]"]